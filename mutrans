#! /usr/bin/env python

from mutrans.run import *
import argparse

parser = argparse.ArgumentParser(prog = "mutrans")

parser.add_argument("--version", action = "version", version = "mutrans-0.1.0")

parser.add_argument("mutation_file", metavar = "mutation.vcf.gz", default = None, type = str,
                    help = "the path to the mutation file")

parser.add_argument("junction_file", metavar = "junction.bed", default = None, type = str,
                    help = "the path to the splicing junction file")

parser.add_argument("output_prefix", metavar = "output_prefix", default = None, type = str, 
                    help = "the prefix of the output")

parser.add_argument("reference_genome", metavar = "reference.fa", type = str,
                    help = "the path to the reference genomoe sequence")

parser.add_argument("annotation_dir", metavar = "annotation_dir", type = str,
                    help = "the path to database directory")

# parser.add_argument("param", metavar = "param.cfg", default = None, type = str,
#                     help = "parameter information file (to be parsed by ConfigParser module)")

parser.add_argument("--debug", default = False, action = 'store_true', help = "keep intermediate files")

parser.add_argument('-f', choices=['vcf', 'anno'], default = 'vcf',
                    help = "the format of mutation file vcf or annovar (tsv) format")

parser.add_argument("--ctrl", metavar = "control_file", default = None, type = str,
                    help = "the path to the control panel junction")

parser.add_argument('--sv', action='store_true',
                    help = "analysis structural variation file")

parse_spjunc_filt_group = parser.add_argument_group("splicing_junction_filtering",
                                                    "parameters used for filtering splicing junction files")

parse_spjunc_filt_group.add_argument("--read_num_thres", type = int, default = 3,
                                     help = "remove splicing junctions whose supporting numbers are below this value (default: %(default)s)")

parse_spjunc_filt_group.add_argument("--overhang_thres", type = int, default = 10,
                                     help = "remove splicing junctions whose overhang sizes are this value (default: %(default)s)")

parse_spjunc_filt_group.add_argument("--keep_annotated", default = False, action = 'store_true', 
                                     help = "do not remove annotated splicing junctions")

args = parser.parse_args()

main(args)

